---
import Techno from './Techno.svelte';
const {active} = Astro.props;
const actionsList = [
  {name: 'Projects', path: 'projects'},
  {name: 'Resume', path: 'resume'},
  {name: 'Contact', path: 'contact'},
]

// let hover = " hover:underline hover:decoration-4 transition-all hover:decoration-indigo-500 dark:decoration-indigo-300 hover:underline-offset-2 ";
let hover = "  ";
function activeHighlight(action) {
  return (active == action.path) ? "underline decoration-2 decoration-indigo-500 dark:decoration-indigo-300  underline-offset-2 text-matty-700 font-medium" : "";
}
---

<Techno />
<nav class="flex px-2 py-6 tbl:px-6 tbl:py-6 z-[10000] w-full backdrop-blur flex-none bg-matty-50/80 dark:bg-matty-900/80 supports-backdrop-blur:bg-white/50 border-b-[1px] dark:border-b-matty-400/20 border-b-matty-900/10 gap-x-4 tbl:gap-x-0">
  <div class="flex mx-auto w-full flex-1 items-center text-center text-matty-900">
    <a href={`${import.meta.env.BASE_URL}`} class="flex items-center"> 
      <img 
        src={import.meta.env.BASE_URL + "assets/logo.svg" }
        alt="logo" 
        class="w-[24px] mr-2 tbl:m-0"> 
      <span class="lpt:ml-4 dark:text-white font-['Poppins'] lpt:inline hidden text-md font-medium">Meher Chaitanya</span> 
    </a>
    {
      !active && 
    <a href="#blogs"
    class="tbl:ml-4 text-sm tbl:text-base lpt:ml-16 lpt-lg:ml-24 font-['Poppins'] font-medium flex items-center gap-2 dark:text-matty-50">
      Blogs 
      <span class="material-symbols-rounded animate-bounce"> arrow_circle_down </span> 
    </a>
    }
  </div>
  <div class="flex">

    <div class="theme-toggle flex">
      <div class="flex">
        <input type="radio" id="light" name="theme-toggle" value="light" class="peer hidden" aria-label="Use light theme">
        <label for="light" title="Use light theme" class="cursor-pointer text-matty-200 peer-checked:hidden flex items-center">
          <span class="material-symbols-rounded"> light_mode </span>
        </label>
      </div>

      <div class="flex">
        <input type="radio" id="dark" name="theme-toggle" value="dark" class="peer hidden" aria-label="Use dark theme">
        <label for="dark" title="Use dark theme" class="cursor-pointer text-matty-800 peer-checked:hidden dark:peer-checked:text-white flex items-center">
          <span class="material-symbols-rounded"> dark_mode </span>
        </label>
      </div>
    </div>

    <div class="ml-2 tbl:ml-4 lpt:ml-6 text-matty-900 font-medium dark:text-white font-['Poppins'] flex gap-2 tbl:gap-4 lpt:gap-6 items-center text-sm">
      {actionsList.map( (action) => (
        <a 
          class={activeHighlight(action) + /* hover + */ "text-sm tbl:text-base dark:text-white"} 
          href={import.meta.env.BASE_URL + action.path}>
          {action.name}
        </a>
      ))}
    </div>
  </div>
</nav>
<script is:inline>
  // localStorage.theme = 'light'
  const checkTheme = () => {
    if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      document.documentElement.classList.add('dark')
      document.getElementById('dark').checked = true
      document.getElementById('light').checked = false
    } else {
      document.documentElement.classList.remove('dark')
      document.getElementById('light').checked = true
      document.getElementById('dark').checked = false
    }
  }

  checkTheme()

  document.getElementById('dark').addEventListener("click", () => {
    localStorage.theme = 'dark'
    checkTheme()
  })

  document.getElementById('light').addEventListener("click", () => {
    localStorage.theme = 'light'
    checkTheme()
  })

</script>
