---
// import Hash from '../common/Hash.astro';

import {extract} from '@extractus/feed-extractor';
interface MarkdownFrontmatter {
	publishDate: number;
}

interface RSSEntry {
  id?: string;
  title: string;
  link: string;
  published: string;
  description: string;
  category: string[];
}

interface RssOutput {
  title: string;
  link: string;
  description: string;
  language: string;
  generator?: string;
  published: string;
  entries: RSSEntry[];
}
const url = 'https://smc181002.medium.com/feed';

const feed = await extract(url, {
  getExtraEntryFields: (feedEntry: RSSEntry) => {
    const {
      category
    } = feedEntry
    return {
      category: category,
    }
  }
})

// let rss2 = await parser.parseUrl('https://smc181002.medium.com/feed');
// console.log(rss2);
const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
const printDate = (date) => {
  let d = new Date(date)
  return `${months[d.getMonth()]}, ${d.getDate()} ${d.getFullYear()}`
}

---

<section class="mx-auto prose dark:prose-invert font-sans dark:text-white-50">
  <h2 id="blogs">Blogs</h2>
  <div class="flex flex-wrap flex-col">
    {console.log(feed)}
  {feed.entries.map((item) => (
    <h3>
      <a href={import.meta.env.BASE_URL + item.link} target="_blank">{item.title}</a>
    </h3>
    <div class="font-readable py-2">{printDate(item.published)}</div>
    <div class="flex gap-4 flex-wrap">
      {item.category.map( tag => (
        <div class="rounded-lg py-1 px-3 bg-blue-200/60 dark:bg-blue-900/40 text-blue-800 dark:text-blue-100/90">{tag}</div>
      ))}
    </div>
  ))}
  </div>
</section>